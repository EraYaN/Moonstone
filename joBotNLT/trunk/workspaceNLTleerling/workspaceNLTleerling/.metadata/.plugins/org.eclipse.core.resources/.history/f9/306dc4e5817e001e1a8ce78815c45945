package javaBot.Nano.Rescue;

import com.muvium.apt.PeriodicTimer;

/**
 * Opdracht 4A - Vooruit rijden
 * Opdracht 4B - Twee seconden lang rijden
 * Opdracht 4C - Vooruit rijden en stop na 2 sec
 * Opdracht 4D - Een bocht maken
 * Opdracht 4E - maak een subroutine
 * Opdracht 4F - Rijd in een vierkantje 
 * Opdracht 5C - Rijd tot aan de zwarte lijn
 * Opdracht 5E - Doorzoek het moeras
 **/

public class DriveBehavior05 extends Behavior {
	private BaseController joBot;
	private int state = 10;
	private int count = 0;
	private int teller = 0;	
	int fs = 10;

	public DriveBehavior05(BaseController initJoBot,
			PeriodicTimer initServiceTick, int servicePeriod) {
		super(initJoBot, initServiceTick, servicePeriod);
		joBot = initJoBot;
	}

	public void doBehavior() {
		// 		Code voor opdracht 5C
		if (state == 0) {
			joBot.drive(50, 50);
			joBot.setStatusLeds(false, false, false); // Turn leds off

			// 			Toevoegen controle op zwarte lijn
			fs = joBot.getSensorValue(joBot.SENSOR_FL);
			if (fs < 400) {  // Test if black
				joBot.setStatusLeds(false, false, true);
				// Turn on blue when line is detected
				state = 1;   // Opdracht 5C
			}

			//			Count toevoegen in opdracht 4D
			count++;
			if (count >= 40) {
				joBot.setStatusLeds(true, false, false); 
				// Turn yellow on
				state = 1;
				count = 0;   
			}
		}	

		if (state == 1) {     // Opdracht 4D
			joBot.drive(0,0);
		}

// Opdracht 5E gebruikt een aantal states om het moeras te doorzoeken
// State 10 = rijd totaan groen
// State 11 = rijd achteruit in een bochtje
// State 12 = controleer of al tien keer gedaan
//            Daarvoor is een extra teller nodig
		
		if (state == 10) {    // Opdracht 5E
			joBot.setStatusLeds(false, false, false);   // Leds uit 
			joBot.drive (50, 50);				        // Rijd vooruit
			fs = joBot.getSensorValue(joBot.SENSOR_FL); 
			if (fs < 500) {   							// Test of groen
				joBot.setStatusLeds(false, true, false);
				state = 11;  
			}
		}
		
		if (state == 11) { 
			joBot.setStatusLeds(false, false, false);   // Leds uit 
			jobotDrive (-50, -30, 10);
			if (count == 0) {   						// Test of klaar
				joBot.setStatusLeds(false, false, true);
				state = 12;  
			}
		}
		
		if (state == 12) { 
			joBot.setStatusLeds(false, false, false);   // Leds uit 
			if (teller++ >= 10) {   					// Test of klaar
				joBot.setStatusLeds(false, false, true);
				teller = 0;
				state = 1; 							    // Stop de robot
			}
		}
	}

	// Voor opdracht 5E gebruiken we de subroutine uit de vorige opdracht.
    // De state laten we nu niet controleren, dus halen we die parameters weg
	private void jobotDrive (int l, int r, int t) {
			joBot.drive(l,r);
			if (count++ >= t) {
				count = 0;         
			}
		}

}
