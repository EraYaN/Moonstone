/package javaBot.Nano.Rescue;

import com.muvium.apt.PeriodicTimer;

/**
 * Opdracht 4A - Vooruit rijden
 * Opdracht 4B - Twee seconden lang rijden
 * Opdracht 4C - Vooruit rijden en stop na 2 sec
 * Opdracht 4D - Een bocht maken
 * Opdracht 4E - maak een subroutine
 * Opdracht 4F - Rijd in een vierkantje 
 * In deze les rijdt de robot 2 seconden vooruit
 * Daarna maakt hij een bocht en kunnen we een patroon volgen
 **/

public class DriveBehavior04 extends Behavior
{
	private BaseController	joBot;
	private int	state	= 10;
	private int	count	= 0;
	int ds = 0;
	
	public DriveBehavior04(BaseController initJoBot, PeriodicTimer initServiceTick,
			int servicePeriod)
	{
		super(initJoBot, initServiceTick, servicePeriod);
		joBot = initJoBot;
	}

	public void doBehavior() {
		// 		Code voor opdracht 4A
		if (state == 0) {
			joBot.drive(50, 50);
			joBot.setStatusLeds(false, false, false); // Turn leds off
			//			Count toevoegen in opdracht 4B.3
			count++;
			//			State laten zien in opdracht 4B.4
			joBot.printLCD("State=0");
			if (count >= 20) {
				joBot.setStatusLeds(true, false, false); // Turn yellow on
				state = 1;
				count = 0;    // opdracht 4d.1
			}
		}	

		// Nieuwe state toevoegen voor maken van een bocht opdracht 4D
		if (state == 1) {      // Opdracht 4D
			joBot.drive(50,30);
			count++;
			joBot.printLCD("State=1");
			if (count >= 10) {
				joBot.setStatusLeds(false, true, false); 
				// Turn green on
				state = 2;
				count = 0;    // Opdracht 4f
			}
		}

		if (state == 2) {      // Opdracht 4D
			joBot.drive(30,50);
			count++;
			joBot.printLCD("State=2");
			if (count >= 10) {
				joBot.setStatusLeds(false, false, true); 
				// Turn green on
				state = 3;
				count = 0;    // Opdracht 4f
			}
		}
		
		// Deze code voor opdracht 4B
		if (state == 3) {   
			joBot.drive(0,0);
			joBot.printLCD("State=3");
		}
		
		// Deze code voor opdracht 4D
		if (state >= 10) {
			jobotDrive (10, 11, 50, 50, 45);
			jobotDrive (11, 12, 50, 20, 15);
			jobotDrive (12, 3, 0, 0, 1);	
		}
	}

	// Gebruiken van een subroutine - Opdracht 4e.1
	// De opdracht kunnen we ook schrijven als:
	//	jobotDrive (0, 1, 50, 50, 20);

	private void jobotDrive (int curState, int newState, int l, int r, int t) {
		if (state == curState) {      // Opdracht 4E
			joBot.drive(l,r);
			if (count++ >= t) {
				state = newState;
				count = 0;         
			}
		}
	}
}
